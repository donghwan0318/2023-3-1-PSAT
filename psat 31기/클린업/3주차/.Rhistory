cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
library(VIM)
install.packages('VIM')
library(VIM)
aggr(dat,prop=FALSE,numbers=TRUE)
aggr(dat,prop=FALSE,numbers=TRUE,col=c('lavender','lavenderblush’))
aggr(dat,prop=FALSE,numbers=TRUE,col=c('lavender','lavenderblush'))
aggr(dat,prop=FALSE,numbers=TRUE,col=c('lavender','lavenderblush'))
install.packages('VIM')
library(VIM)
aggr(dat,prop=FALSE,numbers=TRUE,col=c('lavender','lavenderblush'))
install.packages("VIM")
aggr(dat,cex.axis=.6,col=c('lavender','lavenderblush'))
aggr(dat,prop=FALSE,cex.axis=.7,col=c('lavender','lavenderblush'))
aggr(dat,prop=FALSE,number=TRUE,cex.axis=.7,col=c('lavender','lavenderblush'))
df<-dat.copy()
df<-copy(dat)
df<-df[,num_col]
head(df)
df_select <- df %>% select(Pregnancies,Glucose)
df_gatherd<-df_select %>%  gather(key='Variable',value='Value')
ggplot(data = df_gathered, aes(x = Value, fill = Variable)) +
geom_density(alpha = 0.5) +
labs(x = "Value", y = "Density", fill = "Variable")
df_select <- df %>% select(Pregnancies,Glucose)
df_gathered<-df_select %>%  gather(key='Variable',value='Value')
ggplot(data = df_gathered, aes(x = Value, fill = Variable)) +
geom_density(alpha = 0.5) +
labs(x = "Value", y = "Density", fill = "Variable")
ggplot(data = df_gathered, aes(x = Value, fill = Variable)) +
geom_density(alpha = 0.5) +
labs(x = "Value", y = "Density", fill = "Variable")+
facet_wrap()
ggplot(data = df_gathered, aes(x = Value, fill = Variable)) +
geom_density(alpha = 0.5) +
labs(x = "Value", y = "Density", fill = "Variable")+
facet_wrap(~variable.names())
df_select <- df %>% select(Pregnancies,Glucose)
df_gathered<-df_select %>%  gather(key='Variable',value='Value')
ggplot(data = df_gathered, aes(x = Value, fill = Variable)) +
geom_density(alpha = 0.5) +
labs(x = "Value", y = "Density", fill = "Variable")+
facet_wrap(~variable)
ggplot(df_gather,aes(x=value))+
geom_density()+
facet_wrap(~variable,ncol=3)
df_gather <- gather(df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density()+
facet_wrap(~variable,ncol=3)
df_gather <- gather(missing_df, key = 'variable', value = 'value')
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density()+
facet_wrap(~variable,ncol=3)
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density()+
facet_wrap(~variable,ncol=3,scales='free',drop=TRUE)
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free',drop=TRUE)
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free',drop=TRUE)+
theme_classic()
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
theme(legend.position='none')+
facet_wrap(~variable,ncol=3,scales='free',drop=TRUE)+
theme_classic()
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free',drop=TRUE)+
theme_classic()+
theme(legend.position='none')
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df<-kNN(missing_df,K=5,imp_var=FALSE)
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
head(imputed_df)
imputed_df<-concat(imputed_df,df[,c(1,7)])
imputed_df<-cbind(imputed_df,df[,c(1,7)])
head(imputed_df)
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
head(imputed_df)
df.colnames()
colnames(df)
imputed_df<-imputed_df[,colnames(df)]
head(imputed_df)
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
for (col in num_col){#결측치 확인용용
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
imdf_gather <- gather(imputed_df, key = 'variable', value = 'value')
ggplot(imdf_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
imdf_gather <- gather(imputed_df, key = 'variable', value = 'value')
ggplot(imdf_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
for (col in num_col){#결측치 확인용용
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
for (col in num_col){#결측치 확인용용
count_na<-imputed_df[,col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
for (col in num_col){#결측치 확인용용
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
for (col in num_col){#결측치 확인용용
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
for (col in colnames(imputed_df))#결측치 확인용용
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
imputed_df<-kNN(missing_df,k=5,imp_var=FALSE)
for (col in colnames(imputed_df)){#결측치 확인용용
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
df_gather2 <- gather(imputed_df, key = 'variable', value = 'value')
ggplot(df_gather2,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
na_BMI=df['BMI'].index[df['BMI'],isna()]
na_BMI<-df['BMI'].index[df['BMI'],isna()]
na_BMI<-df['BMI'].index[df['BMI'],isna()]
na_BMI<-df['BMI'].index[df['BMI'].isna()]
na_BMI<-which(is.na(df$BMI))
na_BMI
```{r}
```{r}
imputed_df[na_BMI,]
imputed_df3<-kNN(missing_df,k=3,imp_var=FALSE)
imputed_df3[na_BMI,]
df_gather2 <- gather(imputed_df, key = 'variable', value = 'value')
ggplot(df_gather2,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df[na_BMI,]
imputed_df3<-kNN(missing_df,k=3,imp_var=FALSE)
imputed_df3[na_BMI,]
df_gather2 <- gather(imputed_df3, key = 'variable', value = 'value')
ggplot(df_gather2,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df10<-kNN(missing_df,k=10,imp_var=FALSE)
df_gather2 <- gather(imputed_df10, key = 'variable', value = 'value')
ggplot(df_gather2,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df10<-kNN(missing_df,k=10,imp_var=FALSE)
df_gather2 <- gather(imputed_df10, key = 'variable', value = 'value')
ggplot(df_gather10,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df10<-kNN(missing_df,k=10,imp_var=FALSE)
df_gather10 <- gather(imputed_df10, key = 'variable', value = 'value')
ggplot(df_gather10,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
df_gather5 <- gather(imputed_df, key = 'variable', value = 'value')
ggplot(df_gather5,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df100<-kNN(missing_df,k=100,imp_var=FALSE)
df_gather100 <- gather(imputed_df100, key = 'variable', value = 'value')
ggplot(df_gather100,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df<-cbind(imputed_df,df[,c(1,7,8)]
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
head(imputed_df)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
head(imputed_df)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
head(imputed_df)
aggr(imputed_df,prop=FALSE,number=TRUE,#결측치 시각화
cex.axis=.7,col=c('lavender','lavenderblush'))
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
head(imputed_df)#확인용
aggr(imputed_df,prop=FALSE,number=TRUE,#결측치 시각화
cex.axis=.7,col=c('lavender','lavenderblush'))
for (col in colnames(imputed_df)){#정상적으로 되었는지 확인인
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
num_col
imputed_df %>% cor() %>% corrplot(num_corr,method='shade',main='Correlation of Numeric Variables',mar=c(2,2,2,2))
imputed_df %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(2,2,2,2))
imputed_df %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(4,4,4,4))
imputed_df %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(0.5,0.5,0.5,0.5))
imputed_df %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6))
colnames(dat)
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,c(1,8,3,2,5,4,6,7))]
imputed_df<-cbind(imputed_df,df[,c(1,7,8)])
imputed_df<-imputed_df[,colnames(df)]
head(imputed_df)#확인용
imputed_df[,c(1,8,3,2,5,4,6,)] %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6))
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6))
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',
main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6))
title(main='Correlation of Numeric Variables',line=2)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',
main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),
cex.main=1.5)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',
main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),
cex.main=10)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',
main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),
cex.main=1)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',
main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),
cex.main=1,method='number')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),
cex.main=1,method='number')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(method='shade',main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),cex.main=1,method='number')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(,main='Correlation of Numeric Variables',mar=c(0.6,0.6,0.6,0.6),cex.main=1,method='number')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0.6,0.6,0.6,0.6),cex.main=1,method='number',
main='Correlation of Numeric Variables')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0.4,0.4,0.4,0.4),cex.main=1,method='number',
main='Correlation of Numeric Variables')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0.1,0.1,0.1,0.1),cex.main=1,method='number',
main='Correlation of Numeric Variables')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0.1,0.1,0.1,0.1),cex.main=1,number.cex=0.5,method='number',
main='Correlation of Numeric Variables')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0.1,0.1,0.1,0.1),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables')
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0.1,0.1,0.1,0.1),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,1,1,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,0,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(1,0,1,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),cex.main=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),tl.cex=0.1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),tl.cex=0.5,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),tl.cex=1,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),tl.cex=0.8,number.cex=0.7,method='number',main='Correlation of Numeric Variables',diag=FALSE)
```{r}
set.seed(3031)
scale(imputed_df)
scaled_df<-scale(imputed_df)
install.packages('stats')
install.packages("stats")
library(stats)
factanal(scaled_df,facotr=4,rotation='varimax')
factanal(scaled_df,factor=4,rotation='varimax')
library(stats)
factanal(scaled_df,factor=4,rotation='varimax')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
library(magrittr)
library(corrplot)
library(RColorBrewer)
setwd('D:/psat 31기/3주차')
dat<-read.csv('data_3.csv')
dim(dat) #샘플 수 768 변수 9
#데이터 eda
head(dat)
tail(dat)
str(dat) #데이터 정보 확인
summary(dat)
dat %>%  select_if(is.numeric) %>% names()
num_col<-c('Pregnancies', 'Glucose','BPressure','SThickness',
'Insulin','BMI','DiabetesPF','Age')
for (col in num_col){#결측치 확인용용
count_na<-dat[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}#결측치 확인인
library(VIM)
aggr(dat,prop=FALSE,number=TRUE,#결측치 시각화
cex.axis=.7,col=c('lavender','lavenderblush'))
df<-copy(dat)
df<-df[,num_col]
head(df)#잘되었나 확인해보기
missing_df<-df[,c(2:6)]
df_gather <- gather(missing_df, key = 'variable', value = 'value')
ggplot(df_gather,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df<-kNN(df,k=5,imp_var=FALSE)
for (col in colnames(imputed_df)){#정상적으로 되었는지 확인인
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
df_gather5 <- gather(imputed_df[,c(2:6)], key = 'variable', value = 'value')
ggplot(df_gather5,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df3<-kNN(df,k=3,imp_var=FALSE)
df_gather3 <- gather(imputed_df3[,c(2:6)], key = 'variable', value = 'value')
ggplot(df_gather3,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df10<-kNN(df,k=10,imp_var=FALSE)
df_gather10 <- gather(imputed_df10[,c(2:6)], key = 'variable', value = 'value')
ggplot(df_gather10,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
imputed_df100<-kNN(df,k=100,imp_var=FALSE)
df_gather100 <- gather(imputed_df100[,c(2:6)], key = 'variable', value = 'value')
ggplot(df_gather100,aes(x=value))+
geom_density(aes(colour=variable))+
facet_wrap(~variable,ncol=3,scales='free')+
theme_classic()+
theme(legend.position='none')
for (col in colnames(imputed_df)){#정상적으로 되었는지 확인
count_na<-imputed_df[col] %>% is.na() %>% sum()
cat(paste('The number of missing values in',col,'is',count_na,'\n'))
}
aggr(imputed_df,prop=FALSE,number=TRUE,#결측치 시각화
cex.axis=.7,col=c('lavender','lavenderblush'))
imputed_df[,c(1,8,3,2,5,4,6,7)] %>% cor() %>% corrplot(mar=c(0,0,1,0),tl.cex=0.8,number.cex=1,method='number',main='Correlation of Numeric Variables',diag=FALSE)
set.seed(3031)
scaled_df<-scale(imputed_df)
library(stats)
factanal(scaled_df,factor=4,rotation='varimax')
df_mean<-dat %>% group_by(Pregnancies) %>%
summarise(mean_outcome=mean(Outcome))
coul<-brewer.pal(5,'Pastel1')
barplot(df_mean$mean_outcome,names.arg = df_mean$Pregnancies,col=coul)
df_mean<-dat %>% group_by(Age) %>%
summarise(mean_outcome=mean(Outcome))
coul<-brewer.pal(5,'Pastel1')
barplot(df_mean$mean_outcome,names.arg = df_mean$Age,col=coul)
cluster_df<-scaled_df[,c(6,2,8,3)]
cluster_df %>% head()#확인용
library(factoextra)
library(gridExtra)
p <- fviz_nbclust(cluster_df, FUNcluster = kmeans, method = 'wss',linecolor='aquamarine4') +
theme_classic()
p2 <- fviz_nbclust(cluster_df, FUNcluster = kmeans, method = 'silhouette',linecolor='aquamarine4') +
theme_classic()
grid.arrange(p,p2,ncol=2)
library(stats)
km_fit<-kmeans(cluster_df,centers=3,iter.max = 50,nstart = 1)
colors<-hcl.colors(3,palette='cold')
fviz_cluster(km_fit, geom = "point", palette = colors,data=cluster_df)+
theme_bw()+ggtitle('K-means result')+
theme(plot.title = element_text(hjust = 0.5),legend.position = 'bottom')
p <- fviz_nbclust(cluster_df, FUNcluster = hcut, method = 'wss',linecolor='aquamarine4') +
theme_classic()
p2 <- fviz_nbclust(cluster_df, FUNcluster = hcut, method = 'silhouette',linecolor='aquamarine4')+
theme_classic()
grid.arrange(p,p2,ncol=2)
h_fit<-hcut(cluster_df,k=3,hc_func = 'hclust')
fviz_cluster(h_fit, geom = "point", palette = colors,data=cluster_df)+
theme_bw()+ggtitle('Hieracrchical result')+
theme(plot.title = element_text(hjust = 0.5),legend.position = 'bottom')
#k-means 클러스터링 시각화
set.seed(3031)
library(cluster)
sil_k<-silhouette(km_fit$cluster,dist(cluster_df))
fviz_silhouette(sil_k)
#hierarchical 클러스터링 시각화화
sil_h<-silhouette(h_fit$cluster,dist(cluster_df))
fviz_silhouette(sil_h)
df_clusteredk<-data.frame(cluster=km_fit$cluster,
BMI=cluster_df[,'BMI'],BPressure=cluster_df[,'BPressure'],
Age=cluster_df[,'Age'],Glucose=cluster_df[,'Glucose'])
df_clusteredk <- gather(df_clusteredk,variable,value,-cluster)
head(df_clusteredk)#확인용
ggplot(df_clusteredk, aes(x = variable, y = value, fill=factor(cluster))) +
geom_boxplot() +
scale_fill_brewer(palette='Pastel1')+
facet_wrap(.~variable, ncol=2,scales='free') +
labs(x = "Variable", y = "Value", title = "Cluster Comparison") +
theme_classic()+ggtitle('K-means 클러스터 별 나이, BMI, 혈압, 글루코스 비교')+
theme(plot.title = element_text(hjust = 0.5))+
xlab('key')
set.seed(3031)
fviz_dend(h_fit,show_labels=FALSE,cex=0.5,k=3,color_labels_by_k = FALSE,rect=TRUE)
df_clusteredh<-data.frame(cluster=h_fit$cluster,
BMI=cluster_df[,'BMI'],BPressure=cluster_df[,'BPressure'],
Age=cluster_df[,'Age'],Glucose=cluster_df[,'Glucose'])
df_clusteredh <- gather(df_clusteredh,variable,value,-cluster)
df_clusteredh %>% head()
ggplot(df_clusteredh, aes(x = variable, y = value, fill=factor(cluster))) +
geom_boxplot() +
scale_fill_brewer(palette='Pastel1')+
facet_wrap(.~variable, ncol=2,scales='free') +
labs(x = "Variable", y = "Value", title = "Cluster Comparison") +
theme_classic()+ggtitle('K-means 클러스터 별 나이, BMI, 혈압, 글루코스 비교')+
theme(plot.title = element_text(hjust = 0.5))+
xlab('key')
dat1<-data.frame(outcome=dat[,'Outcome'],cluster=km_fit$cluster)
k<-ggplot(dat1,aes(x=factor(cluster),fill=factor(outcome)))+
geom_bar(position = 'dodge',height=1.5)+
theme_classic()+
ggtitle('K-means 클러스터링 결과와 실제 발병 여부 비교')+
theme(plot.title = element_text(hjust = 0.5,size=10))+
labs(x='km_model.cluster',fill='실제 발병여부')
dat2<-data.frame(outcome=dat[,'Outcome'],cluster=h_fit$cluster)
h<-ggplot(dat2,aes(x=factor(cluster),fill=factor(outcome)))+
geom_bar(position = 'dodge')+
theme_classic()+
labs(x='hc_model.cluster',fill='실제 발병여부')+
ggtitle('K-means 클러스터링 결과와 실제 발병 여부 비교')+
theme(plot.title = element_text(hjust = 0.5,size=10))
grid.arrange(k,h)
#k-means 클러스터링 시각화
set.seed(3031)
library(cluster)
sil_k<-silhouette(km_fit$cluster,dist(cluster_df))
fviz_silhouette(sil_k)
ggplot(df_clusteredk, aes(x = variable, y = value, fill=factor(cluster))) +
geom_boxplot() +
scale_fill_brewer(palette='Pastel1')+
facet_wrap(.~variable, ncol=2,scales='free') +
theme_classic()+ggtitle('K-means 클러스터 별 나이, BMI, 혈압, 글루코스 비교')+
theme(plot.title = element_text(hjust = 0.5))+
xlab('key')
ggplot(df_clusteredk, aes(x = variable, y = value, fill=factor(cluster))) +
geom_boxplot() +
scale_fill_brewer(palette='Pastel1')+
facet_wrap(.~variable, ncol=2,scales='free') +
theme_classic()+ggtitle('K-means 클러스터 별 나이, BMI, 혈압, 글루코스 비교')+
theme(plot.title = element_text(hjust = 0.5))+
xlab('key')
df_clusteredh<-data.frame(cluster=h_fit$cluster,
BMI=cluster_df[,'BMI'],BPressure=cluster_df[,'BPressure'],
Age=cluster_df[,'Age'],Glucose=cluster_df[,'Glucose'])
df_clusteredh <- gather(df_clusteredh,variable,value,-cluster)
df_clusteredh %>% head()
ggplot(df_clusteredh, aes(x = variable, y = value, fill=factor(cluster))) +
geom_boxplot() +
scale_fill_brewer(palette='Pastel1')+
facet_wrap(.~variable, ncol=2,scales='free') +
theme_classic()+ggtitle('K-means 클러스터 별 나이, BMI, 혈압, 글루코스 비교')+
theme(plot.title = element_text(hjust = 0.5))+
xlab('key')
